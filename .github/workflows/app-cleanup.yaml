# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# GitHub recommends pinning actions to a commit SHA.
# To get a newer version, you will need to update the SHA.
# You can also reference a tag or branch, but the action may change without warning.

name: Cleanup resources in GKE

on:
  workflow_dispatch:

env:
  TF_API_TOKEN: ${{ secrets.TF_API_TOKEN}}

jobs:
  setup-build-publish-deploy:
    name: Cleanup on GKE
    runs-on: ubuntu-latest
    environment: production

    steps:
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration file with a Terraform Cloud user API token
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        cli_config_credentials_token: ${{ env.TF_API_TOKEN }}

    # Initialize a new or existing Terraform working directory by creating initial files, loading any remote state, downloading modules, etc.
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
      env:
        TF_CLI_ARGS: '-var-file="variables/prod.tfvars"'

    # Checks that all Terraform configuration files adhere to a canonical format
    - name: Terraform Format
      working-directory: ./terraform
      run: terraform fmt -check

    - name: Terraform Destroy
      working-directory: ./terraform
      if: github.ref == 'refs/heads/main'
      run: terraform destroy -auto-approve -input=false
      env:
        TF_CLI_ARGS: '-var-file="variables/prod.tfvars"'