{
    "swagger": "2.0",
    "info": {
        "description": "The backend service for the Arxiv insanity project.",
        "title": "Arxiv Insanity Backend Service",
        "contact": {},
        "version": "1.0"
    },
    "paths": {
        "/": {
            "get": {
                "description": "Endpoint for performing health check on the application",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Health Check"
                ],
                "summary": "Endpoint for Health Check",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/projects": {
            "get": {
                "description": "Returns a list of objects that contain details of all the projects created by the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Endpoint for listing all the projects for the user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/project.ProjectDetails"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Returns a status json that describes if the project was created successfully or not",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Endpoint for creating a new project",
                "parameters": [
                    {
                        "description": "Project Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.CreateProjectDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/api/projects/{name}": {
            "put": {
                "description": "Returns a status json that describes if the project was updated successfully.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Endpoint for updating an existing project details",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Existing project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Project Details",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/project.CreateProjectDetails"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            },
            "delete": {
                "description": "Returns a status json that describes if the project was deleted successfully.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Project"
                ],
                "summary": "Endpoint for deleting an existing project",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Project name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Response"
                        }
                    }
                }
            }
        },
        "/auth/getUserInfo": {
            "get": {
                "description": "Checks if there is a cookie preset with the jwt token. If present, validates the token and then returns the user details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint for getting user details",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth.UserDetails"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/google": {
            "get": {
                "description": "Will redirect user to google OAuth consent screen",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint for logging in the user using google Oauth 2",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/google/callback": {
            "get": {
                "description": "Will handel the google OAuth call back and redirect to homepage",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint for handling the google OAuth callback",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/auth/isLoggedIn": {
            "get": {
                "description": "Checks if there is a cookie preset with the jwt token. If present, validates the token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Endpoint for checking if user is logged in",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.UserDetails": {
            "type": "object",
            "properties": {
                "emailId": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "profilePic": {
                    "type": "string"
                }
            }
        },
        "models.Response": {
            "type": "object",
            "properties": {
                "data": {},
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "integer"
                }
            }
        },
        "project.CreateProjectDetails": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "project.ProjectDetails": {
            "type": "object",
            "properties": {
                "lastModifiedAt": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        }
    }
}